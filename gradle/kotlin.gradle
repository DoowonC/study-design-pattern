apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: "kotlin-noarg"
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-allopen'

// Custom configuration for metadata
// In IntelliJ IDEA:
// Make sure Spring Boot plugin in enabled and enable annotation processing
// Since Kapt is not yet integrated in IDEA, you need to run manually the command ./gradlew kaptKotlin to generate the metadata
apply plugin: "kotlin-kapt"

kapt {
    useBuildCache = true
}

compileKotlin {
    kotlinOptions {
        javaParameters = true // Useful for reflection.
        useIR = true
        freeCompilerArgs += [
                "-Xjsr305=strict",
                "-Xjvm-default=enable"
        ]
        jvmTarget = VERSIONS.jdkVersion
    }
}

compileTestKotlin {
    kotlinOptions {
        javaParameters = true // Useful for reflection.
        useIR = true
        freeCompilerArgs += [
                "-Xjsr305=strict",
                "-Xjvm-default=enable"
        ]
        jvmTarget = VERSIONS.jdkVersion
    }
}

allOpen {
    annotations(
            "javax.persistence.Entity",
            "javax.persistence.Embeddable",
            "javax.persistence.MappedSuperclass"
    )
}

dependencies {
    // kotlin
    implementation("org.jetbrains.kotlin:kotlin-stdlib")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("io.github.microutils:kotlin-logging-jvm:${VERSIONS.kotlinLoggingVersion}")
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')

    // kapt for spring boot
    pluginManager.withPlugin("org.springframework.boot") {
        kapt('org.springframework.boot:spring-boot-configuration-processor')
        annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
    }
}
